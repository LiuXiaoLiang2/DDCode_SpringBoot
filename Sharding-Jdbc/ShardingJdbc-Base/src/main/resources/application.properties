# 配置数据源类型
spring.datasource.type=com.zaxxer.hikari.HikariDataSource

# 一个实体类对应两张表，覆盖
spring.main.allow-bean-definition-overriding=true
# 参数配置，显示sql
spring.shardingsphere.props.sql.show=true
# 定义名字, 在后面的配置中使用到
spring.shardingsphere.datasource.names=ds1,ds2,ds3,ds4

# 连接数据库的基本配置
spring.shardingsphere.datasource.ds1.type=com.zaxxer.hikari.HikariDataSource
spring.shardingsphere.datasource.ds1.jdbcUrl=jdbc:mysql://192.168.137.132:3306/ksd-sharding-db0?characterEncoding=utf-8&useSSL=false&serverTimezone=Asia/Shanghai
spring.shardingsphere.datasource.ds1.driver-class-name=com.mysql.jdbc.Driver
spring.shardingsphere.datasource.ds1.username=root
spring.shardingsphere.datasource.ds1.password=root
spring.shardingsphere.datasource.ds1.maxPoolSize=100
spring.shardingsphere.datasource.ds1.minPoolSize=5

spring.shardingsphere.datasource.ds2.type=com.zaxxer.hikari.HikariDataSource
spring.shardingsphere.datasource.ds2.jdbcUrl=jdbc:mysql://127.0.0.1:3306/ksd-sharding-db1?characterEncoding=utf-8&useSSL=false&serverTimezone=Asia/Shanghai
spring.shardingsphere.datasource.ds2.driver-class-name=com.mysql.jdbc.Driver
spring.shardingsphere.datasource.ds2.username=root
spring.shardingsphere.datasource.ds2.password=root
spring.shardingsphere.datasource.ds2.maxPoolSize=100
spring.shardingsphere.datasource.ds2.minPoolSize=5


spring.shardingsphere.datasource.ds3.type=com.zaxxer.hikari.HikariDataSource
spring.shardingsphere.datasource.ds3.jdbcUrl=jdbc:mysql://192.168.137.133:3306/ksd-sharding-db0?characterEncoding=utf-8&useSSL=false&serverTimezone=Asia/Shanghai
spring.shardingsphere.datasource.ds3.driver-class-name=com.mysql.jdbc.Driver
spring.shardingsphere.datasource.ds3.username=root
spring.shardingsphere.datasource.ds3.password=root
spring.shardingsphere.datasource.ds3.maxPoolSize=100
spring.shardingsphere.datasource.ds3.minPoolSize=5


spring.shardingsphere.datasource.ds4.type=com.zaxxer.hikari.HikariDataSource
spring.shardingsphere.datasource.ds4.jdbcUrl=jdbc:mysql://192.168.137.133:3306/ksd-sharding-db0?characterEncoding=utf-8&useSSL=false&serverTimezone=Asia/Shanghai
spring.shardingsphere.datasource.ds4.driver-class-name=com.mysql.jdbc.Driver
spring.shardingsphere.datasource.ds4.username=root
spring.shardingsphere.datasource.ds4.password=root
spring.shardingsphere.datasource.ds4.maxPoolSize=100
spring.shardingsphere.datasource.ds4.minPoolSize=5

# 告诉shardingsphere哪个是主节点, 哪个是从节点
# 配置主从名称，可以任意取名字
#spring.shardingsphere.masterslave.name=ms
## 配置主库master，负责数据的写入
#spring.shardingsphere.masterslave.master-data-source-name=ds1
## 配置从库slave节点
#spring.shardingsphere.masterslave.slave-data-source-names=ds2,ds3
# 配置slave节点的负载均衡均衡策略，采用轮询机制
spring.shardingsphere.masterslave.load-balance-algorithm-type=round_robin

# 读写分离配置
#指定ds1为主库，ds3,ds4为它的从库
# 指定主库
spring.shardingsphere.sharding.master-slave-rules.ds1.master-data-source-name=ds1
# 指定从库
spring.shardingsphere.sharding.master-slave-rules.ds1.slave-data-source-names[0]=ds3
spring.shardingsphere.sharding.master-slave-rules.ds1.slave-data-source-names[1]=ds4

# 读写分离配置
# 指定主库
spring.shardingsphere.sharding.master-slave-rules.ds2.master-data-source-name=ds2
# 指定从库, 从库我们也用自己
spring.shardingsphere.sharding.master-slave-rules.ds2.slave-data-source-names[0]=ds2


# 分库分表配置
# 指定逻辑表名【ksd_user】的相应配置
# actual-data-nodes 告诉 ShardingJdbc 有哪些库，有哪些表
spring.shardingsphere.sharding.tables.ksd_user.actual-data-nodes=ds$->{1..2}.ksd_user_$->{0..1}

# 数据库的分片策略
#spring.shardingsphere.sharding.tables.ksd_user.database-strategy.inline.sharding-column=age
#spring.shardingsphere.sharding.tables.ksd_user.database-strategy.inline.algorithm-expression=ds$->{age % 2 + 1}

spring.shardingsphere.sharding.tables.ksd_user.database-strategy.standard.sharding-column=birthday
spring.shardingsphere.sharding.tables.ksd_user.database-strategy.standard.preciseAlgorithmClassName=com.ddcode.sharding.algorithm.BirthdayAlgorithm

# 表的分片策略
spring.shardingsphere.sharding.tables.ksd_user.table-strategy.inline.sharding-column=sex
spring.shardingsphere.sharding.tables.ksd_user.table-strategy.inline.algorithm-expression=ksd_user_$->{sex % 2}


#spring.shardingsphere.sharding.tables.ksd_user.table-strategy.standard.sharding-column=birthday
#spring.shardingsphere.sharding.tables.ksd_user.table-strategy.standard.preciseAlgorithmClassName=com.ddcode.sharding.algorithm.BirthdayTableAlgorithm


# 配置数据库主键策略
# 指定主键
spring.shardingsphere.sharding.tables.ksd_user.key-generator.column=id
# 使用雪花算法
spring.shardingsphere.sharding.tables.ksd_user.key-generator.type=SNOWFLAKE

# 打印 sql
logging.level.com.ddcode.sharding.mapper=debug

# 关闭监控检测
management.health.db.enabled=false